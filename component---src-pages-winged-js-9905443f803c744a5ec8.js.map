{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-anchor-links/components/AnchorLink.js","webpack:///./src/pages/winged.js","webpack:///./node_modules/gatsby-plugin-anchor-links/index.js","webpack:///./src/styles/winged.module.css","webpack:///./src/components/image.js"],"names":["Object","defineProperty","exports","value","AnchorLink","_react","_interopRequireDefault","require","_gatsby","_propTypes","_utils","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_ref","to","title","children","className","_ref$stripHash","stripHash","_ref$gatsbyLinkProps","gatsbyLinkProps","onAnchorLinkClick","onClickHandler","handleStrippedLinkClick","handleLinkClick","linkProps","stripHashedLocation","onClick","e","createElement","Link","propTypes","string","isRequired","bool","func","node","data","styles","container","mainContent","id","href","fileName","style","alt","object-fit","class","width","get","_AnchorLink","module","Image","fluid","useStaticQuery","allImageSharp","nodes","find","n","originalName"],"mappings":"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","file":"component---src-pages-winged-js-9905443f803c744a5ec8.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnchorLink = AnchorLink;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _gatsby = require(\"gatsby\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nAnchorLink.propTypes = {\n  to: _propTypes[\"default\"].string.isRequired,\n  title: _propTypes[\"default\"].string,\n  className: _propTypes[\"default\"].string,\n  stripHash: _propTypes[\"default\"].bool,\n  gatsbyLinkProps: _propTypes[\"default\"].object,\n  onAnchorLinkClick: _propTypes[\"default\"].func,\n  children: _propTypes[\"default\"].node\n};\n\nfunction AnchorLink(_ref) {\n  var to = _ref.to,\n      title = _ref.title,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$stripHash = _ref.stripHash,\n      stripHash = _ref$stripHash === void 0 ? false : _ref$stripHash,\n      _ref$gatsbyLinkProps = _ref.gatsbyLinkProps,\n      gatsbyLinkProps = _ref$gatsbyLinkProps === void 0 ? {} : _ref$gatsbyLinkProps,\n      onAnchorLinkClick = _ref.onAnchorLinkClick;\n  var onClickHandler = stripHash ? _utils.handleStrippedLinkClick : _utils.handleLinkClick;\n\n  var linkProps = _objectSpread(_objectSpread({}, gatsbyLinkProps), {}, {\n    /**\n     * Spread optional gatsbyLinkProps object in fist, so our specific props will override\n     */\n    to: stripHash ? (0, _utils.stripHashedLocation)(to) : to,\n    onClick: function onClick(e) {\n      return onClickHandler(to, e, onAnchorLinkClick);\n    }\n  });\n  /**\n   * Optional props\n   */\n\n\n  if (title) linkProps.title = title;\n  if (className) linkProps.className = className;\n  return /*#__PURE__*/_react[\"default\"].createElement(_gatsby.Link, linkProps, children ? children : title);\n}","import React from \"react\"\nimport { AnchorLink } from \"gatsby-plugin-anchor-links\";\nimport Image from \"../components/image.js\"\nimport styles from \"../styles/winged.module.css\"\nimport Layout from \"../components/layout\"\n\nexport default ({data}) => {\n\treturn (\n\t\t<Layout>\n\t\t\t<div className={styles.container}>\n\t\t\t\t<div className={styles.mainContent}>\n\t\t\t\t\t<h1>Winged - a leap motion drawing app for users with hand and arm disabilities</h1>\n\t\t\t\t\t<h2>Solo project</h2>\n\t\t\t\t\t<h2>Roles performed:</h2>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>User experience researcher</li>\n\t\t\t\t\t\t<li>User interface designer</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h2>Tools used</h2>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Figma</li>\n\t\t\t\t\t\t<li>Miro</li>\n\t\t\t\t\t\t<li>Paper prototyping</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h1><a id=\"executivesummary\"></a>Executive summary</h1>\n\t\t\t\t\t<body>Winged aims to provide a minimalistic interface for users with hand and arm impairement to draw with minimal pain and discomfort</body>\n\t\t\t\t\t<h1>Problem statement</h1>\n\t\t\t\t\t<body>Disabilities have long had negative influence on adults emotionally and physically</body>\n\t\t\t\t\t<body>There are a lot of disabled artists out there who want to be able to draw. However, most of them use other parts of their bodies (such as their mouths and legs), which will greatly cause pain and discomfort.</body>\n\t\t\t\t\t<body>Based on the concept of art therapy, art is a means for users to feel the freedom to express themselves and create something new. It is especially helpful when users are bound by illnesses and feel less in control of their health. </body>\n\t\t\t\t\t<body>\n\t\t\t\t\t“Art provides unlimited possibilities for personal, academic, and professional success.” - <a href=\"https://www.christopherreeve.org/living-with-paralysis/health/staying-active/art-and-creativity\"><u>Christopher and Diana Reeve Foundation. </u></a>\n\t\t\t\t\tWinged promotes inclusivity in the arts and help artists achieve their goals, either for leisure or serious career pursuit\n\t\t\t\t\t</body>\n\t\t\t\t\t<Image fileName=\"disabledartists.png\" style={{\"width\" : \"100%\"}} alt=\"Image of disabled artists in the news\"/>\n\t\t\t\t\t<div className='tinyText'>Disabled Artists in the News</div>\n\t\t\t\t\t<div className='tinyText'>Source: <a href=\"https://mfpausa.com/\"/>Mouth and Foot Painting Artists</div>\n\t\t\t\t\t<h1>Audience</h1>\n\t\t\t\t\t<body>Our audience are <b>those with arm or hand disabilities</b>, unlimited in age or gender</body>\n\t\t\t\t\t<body>Our user testing participants, however, are my friends and acquaintances, who have little to no hand and arm disabilities. I'm working on reaching out to more users in the target audience, so if you happen to know someone or have any recommendation in doing so, please do not hesitate to contact me at trang.le@berkeley.edu. I'd really appreciate it!</body>\n\t\t\t\t\t<h1>Challenges and How Might We (HMWs)</h1>\n\t\t\t\t\t<body>\n\t\t\t\t\t\tThere has been <a href=\"http://chris-creed.com/papers/creed-assets14-tools%20-for-disabled-artists.pdf\"><u>research</u></a> on a software that utilizes the <b>leap motion controller </b>to enable users to draw using hand gestures in midair (researched on by Dr. Chris Creed at University of Birmingham), but the interface in the app was too complicated for users to navigate.\n\t\t\t\t\t</body>\n\t\t\t\t\t<h2>Winged's main challenge is to create an interface that is easy for navigate for different physiological needs.</h2>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tHMW help the users navigate the interface with minimal discomfort and muscle pain?\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tHMW create the user interface (UI) as minimalistic as possible?\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tHMW make the options and the icons easier to click?\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tHMW move the canvas to adjust to the users’ hand placement?\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tHMW create independence for the users when they use our app?\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tHMW help users boost their creativity, and more importantly, their self-esteem?\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ol>\n\n\t\t\t\t\t<body>\n\t\t\t\t\t\tIn this case study, I will propose a solution for HMWs 1-4, and leave 5) and 6) for further research and future iterations\n\t\t\t\t\t</body>\n\t\t\t\t\t<h2>Similar to Dr. Creed's research, we utilize the leap motion controller as a tool for users to draw.</h2>\n\t\t\t\t\t<Image fileName=\"leapmotionsdk.png\"\n\t\t\t\t\t\tstyle={{\"position\" : \"relative\"}}\n\t\t\t\t\t\tobject-fit = \"none\"\n\t\t\t\t\t\talt = \"The leap motion controller visualization\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t<div class=\"tinyText\">The leap motion controller</div>\n\t\t\t\t\t<div class=\"tinyText\">Source: https://www.ultraleap.com/tracking/</div>\n\t\t\t\t\t<h1>Approach</h1>\n\t\t\t\t\t<body>Our approach to addressing the HMWs are <b>hand detection</b>, <b>recommending a suitable wheelchair setup,</b> <b>voice command</b>, and <b>a minimalistic design </b> </body>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Minimalist interface</li>\n\t\t\t\t\t\t<li>Hand gestured detected by the leap motion controller</li>\n\t\t\t\t\t\t<li>Optimized wheelchair setup of the leap motion controller for each user</li>\n\t\t\t\t\t\t<li>Detect users’ hand parts to customize to physiological structures</li>\n\t\t\t\t\t\t<li>Voice command to minimize hand gestures and thus pain</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h1>Design Process</h1>\n\t\t\t\t\t<h2>User Journey</h2>\n\t\t\t\t\t<body>The main pain point we detect from the user journey is when users get used to the app. <b>Much physical discomfort in the beginning would turn the users away from using the app</b>, so we want the onboarding phase goes as smooth and accommodating as possible</body>\n\t\t\t\t\t<Image fileName=\"user-journey.png\" style={{ width: '100%' }} alt=\"\" />\n\t\t\t\t\t<h2>User flow</h2>\n\t\t\t\t\t<body>I created a user flow and identify where we can solve the pain point for users. The highlight of the userflow where the solution takes place is the <b>constant feedback loop in which users can go back and forth and adjust the settings suitable to their needs.</b></body>\n\t\t\t\t\t<Image fileName=\"userflow.png\"\n\t\t\t\t\t\talt = \"User flow for the app\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div class=\"tinyText\">The highlight of the userflow created in Miro</div>\n\t\t\t\t\t<h2>Wireflow</h2>\n\t\t\t\t\t<body>To visualize the interface I want to build, I first created a wireflow to imagine how users would adjust settings. But these questions arise: 1) <b>Can we recommend a setting for users during onboarding?</b> and 2) <b>How do we do so for users with various hand disabilities?</b> </body>\n\t\t\t\t\t<Image fileName=\"wireflow.png\"\n\t\t\t\t\t\talt = \"User journey for the app\"\n\t\t\t\t\t/>\n\t\t\t\t\t<h2>Arising issues</h2>\n\t\t\t\t\t<body>One arising issue I encountered while designing the interface is that <b>different hand physiologies will need different accommodations and setups</b>. When the users' hands or arms are not exactly the same as the hands with the full number of joints and parts, we would have to consider ways to include them in our app as much as possible.</body>\n\t\t\t\t\t<Image fileName=\"handphysiology.png\"\n\t\t\t\t\t\tstyle={{\"position\" : \"relative\"}}\n\t\t\t\t\t\tobject-fit = \"none\"\n\t\t\t\t\t\talt = \"Hand structure of a user vs hand with full joints\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div class=\"tinyText\">One example of user's hand physiology compared to a hand with full joints</div>\n\t\t\t\t\t<Image fileName=\"hand-hierarchy.png\"\n\t\t\t\t\t\tstyle={{\"position\" : \"relative\"}}\n\t\t\t\t\t\tobject-fit = \"none\"\n\t\t\t\t\t\talt = \"Hand hierarchy of leap motion tracker\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div class=\"tinyText\">The leap motion hand hierarchy.</div>\n\t\t\t\t\t<div class=\"tinyText\">Source: <a href=\"https://blog.leapmotion.com/getting-started-leap-motion-sdk/\">Getting started with the leap motion sdk</a></div>\n\t\t\t\t\t<body>Another arising issue is <b>how to perform user testing and design iteration</b>. As our app is interactive in the 3D space, we cannot simply test it as with a clickable prototype. It is hard for users to imagine how they would interact with the app on the 2D space, and spending too much time coding an interface that is way too elaborate and subject to many drastic changes would cost a lot of time. </body>\n\t\t\t\t\t<body>Instead of going from wireframe to digital prototyping and then coding, for this app, <b>putting each fidelity level into code</b> will be necessary to provide <b>the most genuine user testing experience.</b></body>\n\t\t\t\t\t<Image fileName=\"interactivity.png\" style={{ width: '100%' }} alt=\"Design iteration\" />\n\t\t\t\t\t<h1>Solutions</h1>\n\t\t\t\t\t<h2>1. Recommend the best device setup for users based on their hand structures</h2>\n\t\t\t\t\t<body>My proposed solution is that we should have the <b>onboarding screens to detect users' hand joints and parts that are ready for drawing.</b></body>\n\t\t\t\t\t<body>By having the users completing some <b>simple exercises</b> (clicking on a button, moving their hands to a designated location), we might be able to detect which parts of their hands users are comfortable with using and moving.</body>\n\t\t\t\t\t<Image fileName=\"detecthand.png\" alt=\"Detect hand physiology\"/>\n\t\t\t\t\t<h2>2. Give users freedom to setup the interface at their convenience</h2>\n\t\t\t\t\t<body>While doing user testing, I realized that having the buttons placed on users' fingertips are not at all optimal. At first, I only took in consideration users who have paralyzed arms but can still move their fingers. However, this approach, even with this small subset of users, is confusing in and of itself. It was not clear to the participants I tested with that the buttons are on the tip of their fingers. Moreover, this design has a huge flaw, in which it <b>does not provide inclusivity for various disabilities.</b></body>\n\t\t\t\t\t<Image fileName=\"button-placement.png\" style={{width: '100%'}} alt=\"Button placement\"/>\n\t\t\t\t\t<body>Many user testing participants commented that it would be easier for them to just use whichever hand or finger they want to click on buttons and navigate the interface. We <b>give users freedom to customize the interface and interact with the app at their convenience</b>, and still have our recommendation to support them.</body>\n\t\t\t\t\t<h2>3. Voice commands for users to set up devices and choose drawing options</h2>\n\t\t\t\t\t<body>When users start out using the app, we would not know about users' disabilities and how their hands or arms or structured. To limit this initial bulkiness for users, we could guide them through <b>using voice commands during setup</b> to let us know about their disabilities and choosing a suitable device.</body>\n\t\t\t\t\t<Image fileName=\"setup-device.png\" style={{width: \"100%\"}} alt=\"device setup screen\"/>\n\t\t\t\t\t<body>Not just that, <b>voice command also aides users to make drawing options without having to physically click on buttons.</b> They can tell us which color they want to pick or which brush they would use, not dissimilar to Siri's usage.</body>\n\t\t\t\t\t<Image fileName=\"voice-command.png\" style={{width: \"100%\"}} alt=\"drawing with voice command\"/>\n\t\t\t\t\t<h2>4. Suitable wheelchair setup to minimize users' movements</h2>\n\t\t\t\t\t<body>I asked one user (who has no disabilities) that \"how would you go about using a drawing app if your right arm is injured by rockclimbing?\" (she loves rockclimbing and is righthanded). \"I would use my left arm to move the paper around and my right arm to draw, so my injured arm does not have to move around as much,\" she answered.</body>\n\t\t\t\t\t<body>This answer inspired the fourth solution, which is <b>setting up the leap motion controller on a wheelchair at a suitable location</b>.</body>\n\t\t\t\t\t<body>While playing around with the leap motion controller, I realized that as I moved my controller around with one hand and keep the detected hand still, the detected hand would be moving around on the screen, reflecting the \"moving the paper around\" idea that our participant gave.</body>\n\t\t\t\t\t<body>Thus, <b>having a wheelchair with the controller attached and moveable at the click of a button</b> would give users a lot of freedom to make use of the canvas despite limited arm range.</body>\n\t\t\t\t\t<body>Users with <a href=\"https://www.hopkinsmedicine.org/health/conditions-and-diseases/arthrogryposis\"><u>arthrogryposis</u></a>, for example, would have limited arm range movement. <b>\"Moving around the canvas\"</b> is a potential solution for this group of users, and I believe it can benefit users with other conditions and illnesses.</body>\n\t\t\t\t\t<Image fileName=\"wheelchair.png\" style={{width: '100%'}} alt=\"wheelchair setup\"/>\n\t\t\t\t\t<h1>Summary - Takeaways</h1>\n\t\t\t\t\t<body>One of the main challenges of the app is to <b>adapt to different disabilities</b> to increase inclusivity towards our users.</body>\n\t\t\t\t\t<body>Some of the key solutions include: </body>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Experimenting with different different device placements on wheelchair to better suit users' handicap</li>\n\t\t\t\t\t\t<li>Detect users' hand joints and bone structures to recommend a setting for them</li>\n\t\t\t\t\t\t<li>Using voice command to minimize hand interactions and smoothen the onboarding process</li>\n\t\t\t\t\t\t<li>Let users customize button locations in whichever way that is convenient for them</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<h1>Further work</h1>\n\t\t\t\t\t<body>I have identified the following tasks to be done to move this project forward:</body>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\tAs some users suggested, <b>learning from existing assistive technologies</b> and gesture settings of different drawing apps will inform us of the settings/interactions that users have been acquainted with\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>Conduct more <b>research into different disabilities</b> and physiological structures of those with hand impairement</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AnchorLink\", {\n  enumerable: true,\n  get: function get() {\n    return _AnchorLink.AnchorLink;\n  }\n});\n\nvar _AnchorLink = require(\"./components/AnchorLink\");","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"winged-module--container--1Kr7n\",\"mainContent\":\"winged-module--mainContent--1ygU6\"};","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styles from \"../styles/image.module.css\"\n\nconst Image = ({ fileName, alt, style }) => {\n  const { allImageSharp } = useStaticQuery(graphql`\n    query {\n      allImageSharp {\n        nodes {\n          fluid(maxWidth: 1600, quality: 100) {\n            originalName\n            ...GatsbyImageSharpFluid_withWebp\n          }\n        }\n      }\n    }\n  `)\n\n  const fluid = allImageSharp.nodes.find(n => n.fluid.originalName === fileName)\n    .fluid\n\n  return (\n    <figure>\n      <Img fluid={fluid} alt={alt} style={style} />\n    </figure>\n  )\n}\n\nexport default Image;"],"sourceRoot":""}